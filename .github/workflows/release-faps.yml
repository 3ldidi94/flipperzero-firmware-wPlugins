name: "FAP: Build and lint"
on: [push, pull_request]
jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set matrix for build
      id: set-matrix
      run: |
        DIRS=$(find ./flipper_companion_apps/applications/external/ -mindepth 1 -maxdepth 1 -type d -printf '%P\n' | jq -R -s -c 'split("\n")[:-1]')
        echo "::set-output name=matrix::{\"app-dir\":${DIRS}}"

  ufbt-build-action:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app-dir: ${{fromJson(needs.prepare.outputs.matrix).app-dir}}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build with ufbt
      uses: flipperdevices/flipperzero-ufbt-action@v0.1.3
      with:
        sdk-channel: release
        app-dir: ./flipper_companion_apps/applications/external/${{ matrix.app-dir }}

    - name: Upload app artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.event.repository.name }}-${{ matrix.app-dir }}
        path: ${{ steps['Build with ufbt'].outputs.fap-artifacts }}

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          ${{ steps['Build with ufbt'].outputs.fap-artifacts }}